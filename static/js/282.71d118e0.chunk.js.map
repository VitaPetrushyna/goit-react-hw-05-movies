{"version":3,"file":"static/js/282.71d118e0.chunk.js","mappings":"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","sources":["components/MovieDetailsCard/MovieDetailsCard.styled.jsx","components/MovieDetailsCard/MovieDetailsCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","utils/Status.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieDetails = styled.div`\n  display: flex;\n  margin-top: 10px;\n`;\nexport const MovieDetailsImage = styled.div`\n  margin-right: 10px;\n  margin-bottom: 10px;\n`;\nexport const MovieDetailsText = styled.div`\n  min-width: 200px;\n`;\n\nexport const MovieDetailsFoto = styled.img`\n  min-width: 300px;\n  border-radius: 10px;\n  box-shadow: 6px 6px 4px 2px rgba(0, 0, 0, 0.3);\n  margin-right: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { BASE_URL_IMG } from 'services/movies.Api';\nimport fallback from '../../images/fallback.jpg';\nimport {\n  MovieDetails,\n  MovieDetailsImage,\n  MovieDetailsText,\n  MovieDetailsFoto,\n} from './MovieDetailsCard.styled';\n\nexport const MovieDetailsCard = ({\n  movie: {\n    title,\n    release_date,\n    genres,\n    overview = '',\n    poster_path,\n    vote_average,\n  },\n}) => {\n  const userRating = (vote_average * 10).toFixed(2);\n  const yearData = release_date.slice(0, 4);\n\n  return (\n    <MovieDetails>\n      <MovieDetailsImage>\n        <MovieDetailsFoto\n          src={poster_path ? `${BASE_URL_IMG}/${poster_path}` : fallback}\n          alt={title}\n        />\n      </MovieDetailsImage>\n      <MovieDetailsText>\n        <h3>\n          {title} ({yearData})\n        </h3>\n        <p>User Score: {userRating}%</p>\n        <h4>Overview</h4>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        {genres.map(({ id, name }) => (\n          <span key={id}>{name} </span>\n        ))}\n      </MovieDetailsText>\n    </MovieDetails>\n  );\n};\n\nMovieDetailsCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import styled from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: block;\n\n  padding: 5px;\n  width: 200px;\n  border: solid 1px gray;\n  border-radius: 5px;\n  background-color: #efefef;\n  text-align: center;\n  color: #3b3be3;\n`;\n\nexport const WrapperLink = styled.div`\n  margin-top: 20px;\n`;\n\nexport const StyledList = styled(NavLink)`\n  background-color: #efefef;\n  width: 200px;\n  padding: 5px;\n  margin-right: 5px;\n  border: solid 1px gray;\n  border-radius: 5px;\n  text-align: center;\n  color: #3b3be3;\n\n  &.active {\n    background-color: #3876fc;\n    color: white;\n  }\n\n  :hover:not(.active),\n  :focus-visible:host(.active) {\n    color: #88888f;\n  }\n`;\nexport const Additional = styled.div`\n  border: #efefef 3px solid;\n  padding-left: 5px;\n  padding-bottom: 5px;\n`;\nexport const AdditionalNav = styled.div`\n  display: flex;\n`;\n\n// export const BackLink = styled(Link)`\n//   ${buttonStyles}\n// `;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getDetailsMovie } from '../../services/movies.Api';\nimport { MovieDetailsCard } from '../../components/MovieDetailsCard/MovieDetailsCard';\nimport { Status } from '../../utils/Status';\nimport { Loader } from '../../components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\nimport {\n  StyledList,\n  BackLink,\n  Additional,\n  AdditionalNav,\n  WrapperLink,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const cameBack = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    async function searchDetailsMovies() {\n      setStatus(Status.PENDING);\n      try {\n        const fetchDetailsMovies = await getDetailsMovie(movieId);\n\n        setMovie(fetchDetailsMovies);\n        setStatus(Status.RESOLVED);\n\n        if (!fetchDetailsMovies) {\n          toast.error('Sorry, there is no information about this film');\n        }\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    searchDetailsMovies(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === Status.IDLE && <></>}\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && (\n        <div style={{ color: 'red' }}>{error}</div>\n      )}\n      {status === Status.RESOLVED && movie && (\n        <>\n          <WrapperLink>\n            <BackLink to={cameBack}>Go back</BackLink>\n          </WrapperLink>\n\n          <MovieDetailsCard movie={movie} />\n          <Additional>\n            <p>Additional information</p>\n            <AdditionalNav>\n              <StyledList to=\"reviews\" state={{ from: cameBack }}>\n                Reviews\n              </StyledList>\n\n              <StyledList to=\"cast\" state={{ from: cameBack }}>\n                Cast\n              </StyledList>\n            </AdditionalNav>\n          </Additional>\n\n          <Suspense fallback=\"\">\n            <Outlet />\n          </Suspense>\n          <Toaster position=\"top-center\" />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["MovieDetails","styled","MovieDetailsImage","MovieDetailsText","MovieDetailsFoto","MovieDetailsCard","movie","title","release_date","genres","overview","poster_path","userRating","vote_average","toFixed","yearData","slice","src","BASE_URL_IMG","fallback","alt","map","id","name","BackLink","Link","WrapperLink","StyledList","NavLink","Additional","AdditionalNav","movieId","useParams","useState","setMovie","Status","status","setStatus","error","setError","location","useLocation","cameBack","state","from","useEffect","getDetailsMovie","fetchDetailsMovies","toast","searchDetailsMovies","Loader","style","color","to","Suspense","position","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}